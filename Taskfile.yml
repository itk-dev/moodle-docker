version: '3'

dotenv: [".task.env", ".env"]

vars:
  DOCKER_COMPOSE: '{{ .TASK_DOCKER_COMPOSE | default "docker compose" }}'
  # https://taskfile.dev/reference/templating/
  BASE_URL: '{{.TASK_BASE_URL | default .COMPOSE_SERVER_DOMAIN | default .COMPOSE_DOMAIN | default ""}}'

  MOODLE_SCRIPTS_DIR: '/app/moodle/admin/cli'

tasks:
  compose:
    desc: "Run `docker compose` command. Example: task compose -- up --detach"
    cmds:
      - '{{ .DOCKER_COMPOSE }} {{ .CLI_ARGS }}'

  compose-exec:
    desc: "Run `docker compose exec` command handling content on stdin. Example: task compose-exec -- phpfpm php -v"
    cmds:
      # Check if we have content on stdin (cf.
      # https://unix.stackexchange.com/questions/762992/bash-check-if-the-standard-input-contains-anything)
      - if [[ ! -t 0 ]]; then task compose -- exec --no-TTY {{ .CLI_ARGS }}; else task compose -- exec {{ .CLI_ARGS }}; fi
    silent: true

  dist:build:
    summary: Install Moodle distribution
    desc: "Install the moodle version defined in .env"
    cmds:
      - sh -c "wget https://github.com/moodle/moodle/archive/refs/tags/{{.MOODLE_VERSION}}.tar.gz"
      - sh -c "mkdir moodle"
      - sh -c "touch ./config/config.local.php"
      - sh -c "tar -xzf ./{{.MOODLE_VERSION}}.tar.gz --strip-components 1 -C moodle"
      - sh -c "rm {{.MOODLE_VERSION}}.tar.gz"

  install:
    desc: "Install moodle"
    cmds:
      - sh -c "mkdir moodledata"
      - task compose-exec -- phpfpm php /app/moodle/admin/cli/install_database.php --lang=da --agree-license --adminpass=1234

  start:
    desc: "Start docker compose stuff"
    cmds:
      - task compose -- pull
      - task compose -- up --detach --remove-orphans --wait
    silent: true

  site-url:
    desc: "Show site URL"
    cmds:
      - echo {{.URL}}
    vars:
      URL:
        # Compute base URL if not set.
        sh: if [ ! -z "{{.BASE_URL}}" ]; then echo "https://{{.BASE_URL}}"; else echo "http://$(task compose -- port nginx 8080)"; fi
    silent: true

  moodle-script:list:
    desc: "Show available moodle scripts"
    cmds:
      - task compose-exec -- phpfpm ls -l {{.MOODLE_SCRIPTS_DIR}}

  moodle-script:show:
    desc: "Output a script using cat"
    cmds:
      - task compose-exec -- phpfpm cat {{.MOODLE_SCRIPTS_DIR}}/{{ .CLI_ARGS }}
    preconditions:
      - sh: "[ {{.CLI_ARGS}} ]"
        msg: "Script name missing"

  moodle-script:run:
    desc: "Run a moodle script within the moodle container"
    cmds:
      - task compose-exec -- phpfpm php {{.MOODLE_SCRIPTS_DIR}}/{{ .CLI_ARGS }}
    preconditions:
      - sh: "[ {{.CLI_ARGS}} ]"
        msg: "Script name missing"
